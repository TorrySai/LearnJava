class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<Integer> list = new ArrayList<Integer>();
        for(int num : nums) list.add(num);
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        helper(list, 0, res);
        return res;
    }
    
    private void helper(List<Integer> list, int idx, List<List<Integer>> res)
    {
        if(idx == list.size())
        {
            res.add(new ArrayList<Integer>(list));
            return;
        }
        
        for(int i = idx; i < list.size(); ++i)
        {
            swap(list, i, idx);
            helper(list, idx + 1, res);
            swap(list, i, idx);
        }
    }
    
    private void swap(List<Integer> list, int a, int b)
    {
        int tmp = list.get(a);
        list.set(a, list.get(b));
        list.set(b, tmp);
    }
}
